name: 'Docker Compose Runner Tunneling Action'
description: 'Runs docker-compose up and exposes the service using bore.selfhosted'
author: 'WikiTeq'
branding:
  color: blue
  icon: layers
inputs:
  secret:
    description: 'Bore secret to use'
    required: false
  endpoint:
    description: 'Bore endpoint to use'
    required: true
  token:
    description: 'Github token'
    required: true
  port:
    description: 'Port to expose'
    default: '80'
    required: false
  file:
    description: 'Compose file to run'
    default: 'docker-compose.yml'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Check for secrets
      if: ${{ inputs.secret }} == '' || ${{ inputs.secret }} == null
      run: echo 'secret is missing' && exit 1

    - name: Check if user has write access
      uses: lannonbr/repo-permission-check-action@2.0.2
      with:
        permission: "write"
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ inputs.token }}
        workflow_id: DeployerBot,deploy,deploy.yml

    - name: Sleep after cancel
      run: sleep 30s
      shell: bash

    - uses: chrnorm/deployment-action@v2.0.5
      name: Create GitHub deployment
      id: deployment
      with:
        token: ${{ inputs.token }}
        environment: development

    - name: Checkout
      uses: actions/checkout@v3

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@v2.0.1
      with:
        token: ${{ inputs.token }}
        state: 'failure'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - uses: codetalkio/expose-tunnel@v1.4.0
      id: expose
      with:
        service: bore.selfhosted
        port: 80
        selfHostedEndpoint: ${{ inputs.endpoint }}
        secret: ${{ inputs.secret }}

    - name: Test expose fail
      if: ${{ steps.expose.outputs.tunnel-url == '' }}
      run: exit 1
      shell: bash

    - name: Setup env
      run: cp .env.ci .env

    - name: Update server variable
      run: echo "MW_SITE_SERVER=${{ steps.expose.outputs.tunnel-url }}" >> .env
      shell: bash

    - name: Setup Docker Compose
      uses: yu-ichiro/spin-up-docker-compose-action@main
      with:
        file: ${{ inputs.file }}
        cache-key: simple-docker-compose

    - name: Give containers a moment to init
      run: sleep 30s
      shell: bash

    - name: Update deployment status (success)
      uses: chrnorm/deployment-status@v2.0.1
      if: success()
      with:
        token: ${{ inputs.token }}
        environment-url: ${{ steps.expose.outputs.tunnel-url }}
        state: 'success'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Comment on PR
      if: ${{ steps.expose.outputs.tunnel-url != '' && github.event_name == 'pull_request' }}
      uses: mshick/add-pr-comment@v2
      id: comment
      with:
        message: "The PR is deployed to ${{ steps.expose.outputs.tunnel-url }}. Stay-alive time is 1 hour, new commits deployed automatically. The action will continue running until timeout or cancelled. To prevent future deployments remove the `deploy` label from the PR."
        repo-token: ${{ inputs.token }}
        allow-repeats: true

    - name: Sleep
      run: docker-compose logs -f
      shell: bash

    - name: Update deployment status (success)
      uses: chrnorm/deployment-status@v2.0.1
      if: cancelled() || failure()
      with:
        token: ${{ inputs.token }}
        state: 'inactive'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
